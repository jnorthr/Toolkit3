/*
 * This build file was created from /Projects/Web folder
 * by 'jim' at '22/1/17 11:18 PM' with Gradle 2.14
 *
 * This generated file contains a commented-out sample project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */

// Apply the plugin to add support for Groovy
apply plugin: 'groovy'
apply plugin: 'application'

defaultTasks 'clean', 'getJars', 'build', 'test', 'groovydoc', 'run', 'runner'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile fileTree(dir: "src/main/libs", include: ['*.jar'])
	
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile group: 'log4j', name:'log4j', version: '1.2.17'
	// better put log4j.properties in the src/main/resources folders 

    compile "org.codehaus.groovy:groovy-all:2.4.9"
    runtime "org.codehaus.groovy:groovy-all:2.4.9"
    runtime   "org.slf4j:slf4j-log4j12:1.7.21"

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    
    // Spock Framework basic dependencies:
    testCompile "org.codehaus.groovy:groovy-all:2.4.9"
    // The version have to be compatible with Groovy:
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
 
    // Optional dependencies Spock
    // To use Hamcrest matchers:
    testCompile "org.hamcrest:hamcrest-core:1.3"
 
    // To mock classes:
    testRuntime "cglib:cglib-nodep:3.1"
    // Use with cglib to mock classes without default constructor:
    testRuntime "org.objenesis:objenesis:2.1"
}

mainClassName = "io.jnorthr.toolkit.Walker"

task getJars { 
  def destDir = "$projectDir/src/main/libs" //  Adds/encapsulates a dynamic property within task for O-O
  doFirst { 
    copy { 
      from '../Tools/build/libs'
      from '../CRUD/build/libs'
      from '../Chooser/build/libs'
      into destDir 
	} 
  } 
}

task say
say.doLast{
	println "$projectDir=["+projectDir+"]"
}


// runs our main() method; first arg points to a local folder / path name
task(runner, dependsOn: 'classes', type: JavaExec) {
	main = 'io.jnorthr.toolkit.Walker'
	classpath = sourceSets.main.runtimeClasspath
	args '/Users/jimnorthrop/Dropbox/Projects/FileWalker/src', ~/^.*\.properties$/
	systemProperty 'simple.message', 'Hi kids '
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4'
}

