allprojects{
	task hello << {task-> println "I'm $task.project.name"}
}

subprojects{
	apply plugin: "groovy"
	repositories{
		mavenCentral()
	}
    test 
	{
        maxParallelForks = Runtime.getRuntime().availableProcessors()
    }
} // end of subprojects


// Tools specific stuff
project(':Tools') {
	dependencies {
	    compile 'org.codehaus.groovy:groovy-all:2.4.10'
		//compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1'
	    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
	    compile 'org.slf4j:slf4j-api:1.7.25'
    	compile group: 'ch.qos.logback', name:'logback-classic', version: '1.0.9'                                                                                                                                                                 
		compile group: 'ch.qos.logback', name:'logback-core', version: '1.0.9' 
	}

	// runs our main() method; first arg points to a local folder / path name
	task(runner, dependsOn: 'classes', type: JavaExec) {
		main = 'io.jnorthr.toolkit.PathFinder'
		classpath = sourceSets.main.runtimeClasspath
		args '/Users/jimnorthrop/Dropbox/Projects/Toolkit/src', ~/^.*\.properties$/
		systemProperty 'simple.message', 'Hi kids '
	}

	// run config.file existence checker task
	// Feature to confirm a configuration file exists or build a simple one if it does not
	task runChecker(type: JavaExec) {
    	main = "io.jnorthr.toolkit.Checker"
    	classpath = sourceSets.main.runtimeClasspath
	}

	// run config.file existence checker task with a single arg name for the configuration file being needed
	// Feature to confirm a configuration file exists or build a simple one if it does not
	task runChecker1(type: JavaExec) {
    	main = "io.jnorthr.toolkit.Checker"
    	classpath = sourceSets.main.runtimeClasspath
    	args = [".gradleRunChecker1.config"] // simple filename only without any path pls. !
	}
} // end of Tools


// Chooser specific stuff
// http://mrhaki.blogspot.fr/2011/04/groovy-goodness-inject-logging-using.html
// https://www.slf4j.org/manual.html
// https://mvnrepository.com/artifact/org.slf4j
// http://docs.groovy-lang.org/2.4.7/html/api/groovy/util/logging/package-summary.html
// /Users/jimnorthrop/Dropbox/Projects/Toolkit/CRUD/archive/TryChooser.groovy
project(':Chooser') {
	dependencies {
		compile project(':Tools')
	    compile 'org.codehaus.groovy:groovy-all:2.4.10'
	    
    	//@Grab(group='ch.qos.logback', module='logback-classic', version='1.0.9')
		//compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1'
    	    
	    compile 'org.slf4j:slf4j-api:1.7.25'
    	//compile group: 'log4j', name:'log4j', version: '1.2.17'

	    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'

	    runtime 'org.slf4j:slf4j-simple:1.7.25'
	    //runtime 'org.slf4j:slf4j-log4j12:1.7.25'
	    runtime group:'ch.qos.logback', name:'logback-classic', version:'1.0.9'
	                                                                                                                                                                           
    	// sfl4j is just a facade for loggers. To actually get logging to work, you need to                                                                                                                                                       
    	// tie it in with some actual implementation, e.g., logback
    	compile group: 'ch.qos.logback', name:'logback-classic', version: '1.0.9'                                                                                                                                                                 
		compile group: 'ch.qos.logback', name:'logback-core', version: '1.0.9' 
	}

	// runs the Chooser main() method; args are ignored but maybe later ?
	task(runChooser, dependsOn: 'classes', type: JavaExec) {
		main = 'io.jnorthr.toolkit.Chooser'
		classpath = sourceSets.main.runtimeClasspath
		args 'jimbo', 'hi kids'
		systemProperty 'simple.message', 'Hi kids '
	}

	// runs the Picker main() method; args are ignored but maybe later ?
	task(runPicker, dependsOn: 'classes', type: JavaExec) {
		main = 'io.jnorthr.toolkit.Picker'
		classpath = sourceSets.main.runtimeClasspath
		args 'jimbo', 'hi kids'
		systemProperty 'simple.message', 'Hi kids '
	}

	// runs the Saverer main() method; args are ignored but maybe later ?
	task(runSaver, dependsOn: 'classes', type: JavaExec) {
		main = 'io.jnorthr.toolkit.Saver'
		classpath = sourceSets.main.runtimeClasspath
		args 'jimbo', 'hi kids'
		systemProperty 'simple.message', 'Hi kids '
	}

	// runs the main() method; args are ignored but maybe later ?
	task(runResponse, dependsOn: 'classes', type: JavaExec) {
		main = 'io.jnorthr.toolkit.Response'
		classpath = sourceSets.main.runtimeClasspath
		args 'jimbo', 'hi kids'
		systemProperty 'simple.message', 'Hi kids '
	}
} // end of Chooser


// CRUD specific stuff
project(':CRUD') {
	dependencies {
		compile project(':Tools')
	    compile 'org.codehaus.groovy:groovy-all:2.4.10'
	    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
	    compile 'org.slf4j:slf4j-api:1.7.25'
    	compile group: 'ch.qos.logback', name:'logback-classic', version: '1.0.9'                                                                                                                                                                 
		compile group: 'ch.qos.logback', name:'logback-core', version: '1.0.9' 
	}
}


// FileWalker specific stuff
project(':FileWalker') {
	dependencies {
		compile project(':Tools')
		compile project(':Chooser')
		compile project(':CRUD')
	    compile 'org.codehaus.groovy:groovy-all:2.4.10'
	    compile 'org.slf4j:slf4j-api:1.7.25'
    	compile group: 'ch.qos.logback', name:'logback-classic', version: '1.0.9'                                                                                                                                                                 
		compile group: 'ch.qos.logback', name:'logback-core', version: '1.0.9' 
	}

	// runs the Walker main() method; args are ignored but maybe later ?
	task(runWalker, dependsOn: 'classes', type: JavaExec) {
		main = 'io.jnorthr.toolkit.Walker'
		classpath = sourceSets.main.runtimeClasspath
		args 'jimbo', 'hi kids'
		systemProperty 'simple.message', 'Hi kids '
	}

} // end of project

// WOW specific stuff
project(':WOW') {
	dependencies {
	    compile 'org.codehaus.groovy:groovy-all:2.4.10'
	    compile group: 'log4j', name:'log4j', version: '1.2.17'
	    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'

	    compile 'org.slf4j:slf4j-api:1.7.25'
    	compile group: 'ch.qos.logback', name:'logback-classic', version: '1.0.9'                                                                                                                                                                 
		compile group: 'ch.qos.logback', name:'logback-core', version: '1.0.9' 
	}
}

